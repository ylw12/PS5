library(foreign)
ANES <- read.dta("anes_timeseries_2012_stata12.dta")
ANESslected <- ANES[ , c("ft_dpc", "gender_respondent_x", "dem_raceeth_x", "interest_attention",
"prmedia_atinews", "prmedia_attvnews", "prmedia_atpprnews",
"prmedia_atrdnews", "presapp_track", "libcpre_self", "pid_self")]
# Name the columns in a better way.
colnames(ANESslected) <- c("Obama", "Gender", "Ethnicty", "Attention", "Internet", "TV",
"Newspaper", "Radio", "Direction", "Selfplacement", "PartyIdentity")
ANESslected[, c(2,3)] <- gsub("[[:digit:]]", "", ANESslected[, c(2,3)])
View(ANESslected)
ANES <- read.dta("anes_timeseries_2012_stata12.dta")
ANESslected <- ANES[ , c("ft_dpc", "gender_respondent_x", "dem_raceeth_x", "interest_attention",
"prmedia_atinews", "prmedia_attvnews", "prmedia_atpprnews",
"prmedia_atrdnews", "presapp_track", "libcpre_self", "pid_self")]
# Name the columns in a better way.
colnames(ANESslected) <- c("Obama", "Gender", "Ethnicty", "Attention", "Internet", "TV",
"Newspaper", "Radio", "Direction", "Selfplacement", "PartyIdentity")
# Clean the data
# Recode gender and ethnicity as catagorical variables.
ANESslected[, c(2,3)] <- gsub(".", "", ANESslected[, c(2,3)])
?substr
ANESslected[, c(2,3)] <- gsub(substr(ANESslected[, c(2,3)], 1, 2), "", ANESslected[, c(2,3)])
ANES <- read.dta("anes_timeseries_2012_stata12.dta")
ANESslected <- ANES[ , c("ft_dpc", "gender_respondent_x", "dem_raceeth_x", "interest_attention",
"prmedia_atinews", "prmedia_attvnews", "prmedia_atpprnews",
"prmedia_atrdnews", "presapp_track", "libcpre_self", "pid_self")]
# Name the columns in a better way.
colnames(ANESslected) <- c("Obama", "Gender", "Ethnicty", "Attention", "Internet", "TV",
"Newspaper", "Radio", "Direction", "Selfplacement", "PartyIdentity")
# Clean the data
# Recode gender and ethnicity as catagorical variables.
ANESslected[, c(2,3)] <- gsub(substr(ANESslected[, c(2,3)], 1, 2), "", ANESslected[, c(2,3)])
substr(ANESslected[, c(2,3)], 1, 2)
substr(ANESslected[, c(2,3)], 1, 2)
ANESslected[ , c(4,8)] <- ifelse(substr(ANESslected[ , 8], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , 8], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , 8], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , 8], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , 8], 1, 1) == '5', 5, NA)))))
ANES <- read.dta("anes_timeseries_2012_stata12.dta")
ANESslected <- ANES[ , c("ft_dpc", "gender_respondent_x", "dem_raceeth_x", "interest_attention",
"prmedia_atinews", "prmedia_attvnews", "prmedia_atpprnews",
"prmedia_atrdnews", "presapp_track", "libcpre_self", "pid_self")]
# Name the columns in a better way.
colnames(ANESslected) <- c("Obama", "Gender", "Ethnicty", "Attention", "Internet", "TV",
"Newspaper", "Radio", "Direction", "Selfplacement", "PartyIdentity")
# Clean the data
# Recode the varible about political interest and media.
ANESslected[ , c(4,5,6,7,8)] <- ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '5', 5, NA)))))
# Randomly subset the data into two partitions.
ANES <- read.dta("anes_timeseries_2012_stata12.dta")
ANESslected <- ANES[ , c("ft_dpc", "gender_respondent_x", "dem_raceeth_x", "interest_attention",
"prmedia_atinews", "prmedia_attvnews", "prmedia_atpprnews",
"prmedia_atrdnews", "presapp_track", "libcpre_self", "pid_self")]
# Name the columns in a better way.
colnames(ANESslected) <- c("Obama", "Gender", "Ethnicty", "Attention", "Internet", "TV",
"Newspaper", "Radio", "Direction", "Selfplacement", "PartyIdentity")
ANESslected[ , c(4,5,6,7,8)] <- ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , c(4,5,6,7,8)], 1, 1) == '5', 5, NA)))))?
?apply
?apply
for(i in c(4,5,6,7,8)){
ANESslected[ , i] <- ifelse(substr(ANESslected[ , i], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , i], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , i], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , i], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , i], 1, 1) == '5', 5, NA)))))
}
ANESslected[ , 10] <- ifelse(substr(ANESslected[ , 10], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , 10], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , 10], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , 10], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , 10], 1, 1) == '5', 5,
ifelse(substr(ANESslected[ , 10], 1, 1) == '6', 6,
ifelse(substr(ANESslected[ , 10], 1, 1) == '7', 7, NA)))))))
setwd("/Users/luweiying/Desktop/ASP/PS5/PS5_Luwei")
library(foreign)
ANES <- read.dta("anes_timeseries_2012_stata12.dta")
ANESslected <- ANES[ , c("ft_dpc", "gender_respondent_x", "dem_raceeth_x", "interest_attention",
"prmedia_atinews", "prmedia_attvnews", "prmedia_atpprnews",
"prmedia_atrdnews", "presapp_track", "libcpre_self", "pid_self")]
# Name the columns in a better way.
colnames(ANESslected) <- c("Obama", "Gender", "Ethnicty", "Attention", "Internet", "TV",
"Newspaper", "Radio", "Direction", "Selfplacement", "PartyIdentity")
# Clean the data
# Recode the varible about political interest and media.
for(i in c(4,5,6,7,8)){
ANESslected[ , i] <- ifelse(substr(ANESslected[ , i], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , i], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , i], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , i], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , i], 1, 1) == '5', 5, NA)))))
}
# Recode the varible about political interest and media.
for(i in c(4,5,6,7,8)){
ANESslected[ , i] <- ifelse(substr(ANESslected[ , i], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , i], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , i], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , i], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , i], 1, 1) == '5', 5, NA)))))
}
# Recode self-placement on the left-right dimention.
ANESslected[ , 10] <- ifelse(substr(ANESslected[ , 10], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , 10], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , 10], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , 10], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , 10], 1, 1) == '5', 5,
ifelse(substr(ANESslected[ , 10], 1, 1) == '6', 6,
ifelse(substr(ANESslected[ , 10], 1, 1) == '7', 7, NA)))))))
# Randomly subset the data into two partitions.
View(ANESslected)
ANESslected[ ,2] <- ifelse(substr(ANESslected[ , 2], 1, 1) == '1', 1, 0)
unique(ANESslected[ ,3])
unique(ANESslected[ ,9])
unique(ANESslected[ ,11])
# Recoded gender, man is coded as 1 and female 0.
ANESslected[ ,2] <- ifelse(substr(ANESslected[ , 2], 1, 1) == '1', 1, 0)
# Recode the varible about political interest and media.
for(i in c(4,5,6,7,8)){
ANESslected[ , i] <- ifelse(substr(ANESslected[ , i], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , i], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , i], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , i], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , i], 1, 1) == '5', 5, NA)))))
}
# Recode the varible about whether the overall direction is right or wrong.
ANESslected[ , 9] <- ifelse(substr(ANESslected[ , 9], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , i], 1, 1) == '2', 0, NA))
# Recode self-placement on the left-right dimention.
ANESslected[ , 10] <- ifelse(substr(ANESslected[ , 10], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , 10], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , 10], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , 10], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , 10], 1, 1) == '5', 5,
ifelse(substr(ANESslected[ , 10], 1, 1) == '6', 6,
ifelse(substr(ANESslected[ , 10], 1, 1) == '7', 7, NA)))))))
# Recode the party idendity, collapse the levels into three.
ANESslected[ , 11] <- ifelse(substr(ANESslected[ , 11], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , 11], 1, 1) == '2', 2, NA))
set.seed(662)
training <- ANESslected[sample(1:nrow(ANESslected), nrow(ANESslected)/2, replace = FALSE),]
testing <- ANESslected[!(row.names(ANESslected) %in% row.names(training)),]
model_OLS <- lm(Obama ~ Gender + Ethnicty + Attention + Internet + TV + Newspaper + Radio
+ Direction + Selfplacement + PartyIdentity, data = training)
summary(model_OLS)
model_Tobit <- tobit(Obama ~ Gender + Ethnicty + Attention + Internet + TV + Newspaper + Radio
+ Direction + Selfplacement + PartyIdentity, data = training,
left = 0, right = 100)
library(AER)
model_Tobit <- tobit(Obama ~ Gender + Ethnicty + Attention + Internet + TV + Newspaper + Radio
+ Direction + Selfplacement + PartyIdentity, data = training,
left = 0, right = 100)
summary(model_Tobit)
model_Tobit <- tobit(Obama ~ Gender + Attention + Internet + TV + Newspaper + Radio
+ Direction + Selfplacement + PartyIdentity, data = training,
left = 0, right = 100)
summary(model_Tobit)
rm(list=ls())
setwd("/Users/luweiying/Desktop/ASP/PS5/PS5_Luwei")
# Read in the data and subset the data frame by variable, leaving only the
# variables we are interested in.
library(foreign)
ANES <- read.dta("anes_timeseries_2012_stata12.dta")
ANESslected <- ANES[ , c("ft_dpc", "gender_respondent_x", "interest_attention",
"prmedia_atinews", "prmedia_attvnews", "prmedia_atpprnews",
"prmedia_atrdnews", "presapp_track", "libcpre_self", "pid_self")]
# Name the columns in a better way.
colnames(ANESslected) <- c("Obama", "Gender", "Attention", "Internet", "TV",
"Newspaper", "Radio", "Direction", "Selfplacement", "PartyIdentity")
# Clean the data
ANESslected[ ,2] <- ifelse(substr(ANESslected[ , 2], 1, 1) == '1', 1, 0)
for(i in c(3,4,5,6,7)){
ANESslected[ , i] <- ifelse(substr(ANESslected[ , i], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , i], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , i], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , i], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , i], 1, 1) == '5', 5, NA)))))
}
ANESslected[ , 8] <- ifelse(substr(ANESslected[ , 8], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , 8], 1, 1) == '2', 0, NA))
ANESslected[ , 9] <- ifelse(substr(ANESslected[ , 9], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , 9], 1, 1) == '2', 2,
ifelse(substr(ANESslected[ , 9], 1, 1) == '3', 3,
ifelse(substr(ANESslected[ , 9], 1, 1) == '4', 4,
ifelse(substr(ANESslected[ , 9], 1, 1) == '5', 5,
ifelse(substr(ANESslected[ , 9], 1, 1) == '6', 6,
ifelse(substr(ANESslected[ , 9], 1, 1) == '7', 7, NA)))))))
# Recode the party idendity, collapse the levels into three.
ANESslected[ , 10] <- ifelse(substr(ANESslected[ , 10], 1, 1) == '1', 1,
ifelse(substr(ANESslected[ , 10], 1, 1) == '2', 2, NA))
set.seed(662)
training <- ANESslected[sample(1:nrow(ANESslected), nrow(ANESslected)/2, replace = FALSE),]
testing <- ANESslected[!(row.names(ANESslected) %in% row.names(training)),]
model_OLS <- lm(Obama ~ Gender + Attention + Internet + TV + Newspaper + Radio
+ Direction + Selfplacement + PartyIdentity, data = training)
summary(model_OLS)
library(AER)
model_Tobit <- tobit(Obama ~ Gender + Attention + Internet + TV + Newspaper + Radio
+ Direction + Selfplacement + PartyIdentity, data = training,
left = 0, right = 100)
summary(model_Tobit)
library(randomForest)
model_RF <- randomForest(Obama ~ Gender + Attention + Internet + TV + Newspaper + Radio
+ Direction + Selfplacement + PartyIdentity,
data = na.omit(training), trees = 1000)
summary(model_RF)
PredOLS <- predict(model_OLS, newdata = testing, type="response")
PredTobit <- predict(model_Tobit, newdata = testing, type="response")
PredRM <- predict(model_RF, newdata = tesing, type="response")
PredRM <- predict(model_RF, newdata = testing, type="response")
Allpredictions <- matrix(c(predOLS, predTobit, predRF), ncol = 3)
PredRF <- predict(model_RF, newdata = testing, type="response")
Allpredictions <- matrix(c(PredOLS, PredTobit, PredRF), ncol = 3)
head(Allpredictions)
PredOLS
head(Allpredictions, 100)
Allpredictions <- as.matrix(cbind(PredOLS, PredTobit, PredRF))
head(Allpredictions, 100)
model_OLS <- lm(Obama ~ Gender + Attention + Direction + Selfplacement + PartyIdentity,
data = training)
summary(model_OLS)
# Tobit
library(AER)
model_Tobit <- tobit(Obama ~ Gender + Attention + Direction + Selfplacement + PartyIdentity,
data = training,
left = 0, right = 100)
summary(model_Tobit)
# Random Forest
library(randomForest)
model_RF <- randomForest(Obama ~ Gender + Attention + Direction + Selfplacement + PartyIdentity,
data = na.omit(training), trees = 1000)
summary(model_RF)
# Now use the above three models to predict the value of Obama thermometer the "testing"
# group.
PredOLS <- predict(model_OLS, newdata = testing, type="response")
PredTobit <- predict(model_Tobit, newdata = testing, type="response")
PredRF <- predict(model_RF, newdata = testing, type="response")
Allpredictions <- as.matrix(cbind(PredOLS, PredTobit, PredRF))
head(Allpredictions, 100)
